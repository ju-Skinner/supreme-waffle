name: "Release Please"

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      paths_released: ${{ steps.manifest-release.outputs.paths_released }}
      releases_created: ${{ steps.manifest-release.outputs.releases_created }}

    permissions:
      contents: write
      id-token: write
      pull-requests: write

    strategy:
      matrix:
        path: ['libs/core', 'libs/react', 'libs/doc-components']

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ''

      - uses: google-github-actions/release-please-action@v4
        id: manifest-release
        with:
          manifest-file: .release-please-manifest.json

      - name: Show output from Release-Please
        run: |
          echo "RELEASES_created: ${{ steps.manifest-release.outputs.releases_created }}"
          echo "paths_released: ${{ steps.manifest-release.outputs.paths_released }}"

      - name: Release Please outputs
        run: |
          echo "release_created: ${{ steps.manifest-release.outputs[format('{0}--release_created', matrix.path)] }}"
          echo "upload_url: ${{ steps.manifest-release.outputs[format('{0}--upload-url', matrix.path)] }}"
          echo "html_url: ${{ steps.manifest-release.outputs[format('{0}--html_url', matrix.path)] }}"
          echo "tag_name: ${{ steps.manifest-release.outputs[format('{0}--tag_name', matrix.path)] }}"
          echo "major: ${{ steps.manifest-release.outputs[format('{0}--major', matrix.path)] }}"
          echo "minor: ${{ steps.manifest-release.outputs[format('{0}--minor', matrix.path)] }}"
          echo "patch: ${{ steps.manifest-release.outputs[format('{0}--patch', matrix.path)] }}"
          echo "sha: ${{ steps.manifest-release.outputs[format('{0}--sha', matrix.path)] }}"

      - name: Configure user
        run: |
          git config user.name "Automation Bot"
          git config user.email "ju.skinner@gmail.com"

      - uses: bhowell2/github-substring-action@1.0.2
        id: project-name
        with:
          value: ${{ matrix.path}}
          index_of_str: "libs/"

      # - name: Build Packages
      #   run: npm install --legacy-peer-deps

      # - uses: ./.github/workflows/actions/publish-npm
      #   with:
      #     tag: 'latest'
      #     token: ${{ secrets.NPM_TOKEN }}
      #     working-directory: ${{ matrix.path }}
      #     project: "sw-${{ steps.project-name.outputs.substring }}"

      - name: Current Date
        run: |
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Core Slack Notification
        if: matrix.path == 'libs/core'
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          DATE: ${{ env.CURRENT_DATE }}
          PULL_REQUEST: "${{ vars.commit_url }}/${{ steps.manifest-release.outputs['libs/core--sha'] }}"
          VERSION: ${{ steps.manifest-release.outputs['libs/core--tag_name'] }}
          NOTES: ${{ steps.manifest-release.outputs['libs/core--notes'] }}
        with:
          channel-id: 'julian-workflow-test'
          payload-file-path: "./.github/workflows/slack-release-info-payload.json"
